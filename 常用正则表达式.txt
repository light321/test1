匹配中国邮政编码：[1-9]\d{5}     //[1-9]以1~9任意一个数字开头，\d是预定义[0-9],{5}表示要出现5次不多不少     
身份证号码: /^\d{17}[\d|x]$|^\d{15}$/     //（第一代身份证是15位，二代或者一代） |表示或者，^\d{17}[\d|x]$   -> 以17位[0-9]开头，以一个[0-9]或者x结尾
//^\d{15}$  -> 开头结束都是[0-9],总共15位
电话号码: /^(\(\d{3,4}\)|\d{3,4}-)?\d{7,8}$/;
http协议地址: /^http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w-\.\/\?%&\=]*)?$/;
匹配网址URL的正则表达式：[a-zA-z]+://[^\s]*
匹配Email地址的正则表达式：\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
匹配腾讯QQ号：[1-9][0-9]{4,}        //第一个数字是0-9任意数字，之后每位是0-9上的任意数，且至少有四位
匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$   //开头是字母大小写都可以，
//结尾至少有4位，至多有15位，可以是大小写字母或者数字以及下划线
匹配中文字符的正则表达式： [\u4e00-\u9fa5]      //固定写法，运用时要放在斜杆内，表示汉字
匹配双字节字符(包括汉字在内)：[^\x00-\xff]
   应用: 计算字符串长度
   String.prototype.len=function(){return this.replace([^\x00-\xff]/g,"aa").length;}
匹配空白行的正则表达式：\n\s*\r
匹配首尾空白字符的正则表达式：^\s* |\s*$  
    应用: trim函数
    String.prototype.trim = function(){
		return this.replace(/(^\s*)|(\s*$)/g, "");
	}
区号+座机号码+分机号码：regexp="^(0[0-9]{2,3}\-)?([2-9][0-9]{6,7})+(\-[0-9]{1,4})?$" 
手机(中国移动手机号码)：regexp="^((\(\d{3}\))|(\d{3}\-))?13[456789]\d{8}|15[89]\d{8}"
所有手机号码：regexp="^((\(\d{3}\))|(\d{3}\-))?13[0-9]\d{8}|15[89]\d{8}"(新添加了158,159两个号段)
